USE Final
GO

-- TẠO BẢNG
DROP TABLE IF EXISTS ASSIGNMENT;
GO

CREATE TABLE ASSIGNMENT (
    ID NVARCHAR(MAX),
    LECTUREID NVARCHAR(MAX),
	COURESID NVARCHAR(MAX),
    STUDENTID NVARCHAR(MAX),
    [FILENAME] NVARCHAR(MAX),
	SUBMIT BIT,
	SCORE NVARCHAR(MAX)
);
GO

-- TẠO SEQUENCE
DROP SEQUENCE IF EXISTS ASSIGNMENT_SEQ;
GO
CREATE SEQUENCE ASSIGNMENT_SEQ
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NO MAXVALUE
    CACHE 10;
GO

-- HÀM TẠO BẢNG TỪ CHUỖI
CREATE OR ALTER FUNCTION GETTABLE_ASSIGNMENT (@ID NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT * 
    FROM ASSIGNMENT A 
    WHERE A.LECTUREID LIKE '%' + @ID + '%'
			OR A.STUDENTID LIKE '%' + @ID + '%'
			OR A.COURESID LIKE '%' + @ID + '%'
			or @ID = N''
);
GO

-- HÀM TẠO BẢNG TỪ CHUỖI
CREATE OR ALTER FUNCTION GETTABLE_ASSIGNMENT_VI (@ID NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT	A.ID AS ID,
			A.LECTUREID AS [MÃ GIẢNG VIÊN],
			A.STUDENTID AS [MÃ SINH VIÊN],
			A.COURESID AS [MÃ MÔN HỌC],
			A.[FILENAME] AS [TÊN FILE],
			A.SUBMIT AS [TÌNH TRẠNG],
			A.SCORE AS [ĐIỂM]
    FROM ASSIGNMENT A 
    WHERE A.LECTUREID LIKE '%' + @ID + '%'
			OR A.STUDENTID LIKE '%' + @ID + '%'
			OR A.COURESID LIKE '%' + @ID + '%'
			or @ID = N''
);
GO

CREATE OR ALTER FUNCTION GETTABLE_JOIN_ASSIGNMENT_VI(@CONDITION NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT	A.ID AS ID,
			A.LECTUREID AS [MÃ GIẢNG VIÊN],
			L.FIRSTNAME AS [HỌ GV],
			L.LASTNAME AS [TÊN GV],
			A.STUDENTID AS [MÃ SINH VIÊN],
			S.FIRSTNAME AS [HỌ SV],
			S.LASTNAME AS [TÊN SV],
			A.COURESID AS [MÃ MÔN HỌC],
			A.[FILENAME] AS [TÊN FILE],
			A.SUBMIT AS [TÌNH TRẠNG],
			A.SCORE AS [ĐIỂM]
    FROM ASSIGNMENT A 
		LEFT JOIN LECTURER L ON A.LECTUREID = L.ID
		LEFT JOIN STUDENT S ON A.STUDENTID = S.ID
    WHERE A.LECTUREID LIKE '%' + @CONDITION + '%'
			OR A.STUDENTID LIKE '%' + @CONDITION + '%'
			OR A.COURESID LIKE '%' + @CONDITION + '%'
			or @CONDITION = N''
);
GO

-- HÀM KIỂM TRA INSERT
CREATE OR ALTER FUNCTION CHECK_INSERT_ASSIGNMENT(
    @LECTUREID NVARCHAR(MAX),
	@COURESID NVARCHAR(MAX))
RETURNS BIT
AS
BEGIN
    DECLARE @RESULT BIT = 0;
    --IF NOT EXISTS (SELECT 1 FROM ASSIGNMENT A
				--	WHERE A.LECTUREID = @LECTUREID
				--		AND A.COURESID = @COURESID)
        SET @RESULT = 1;
    RETURN @RESULT;
END;
GO

-- HÀM KIỂM TRA UPDATE
CREATE OR ALTER FUNCTION CHECK_UPDATE_ASSIGNMENT(@ID NVARCHAR(10))
RETURNS BIT
AS
BEGIN
    DECLARE @RESULT BIT = 0;
    SET @RESULT = 1;
    RETURN @RESULT;
END;
GO

-- HÀM KIỂM TRA DELETE
CREATE OR ALTER FUNCTION CHECK_DELETE_ASSIGNMENT()
RETURNS BIT
AS
BEGIN
    RETURN 1;
END;
GO

-- HÀM INSERT
CREATE OR ALTER PROCEDURE INSERT_ASSIGNMENT 
    @LECTUREID NVARCHAR(MAX),
	@COURESID NVARCHAR(MAX),
    @STUDENTID NVARCHAR(MAX),
    @FILENAME NVARCHAR(MAX),
	@SCORE NVARCHAR(MAX)
AS
BEGIN
    IF DBO.CHECK_INSERT_ASSIGNMENT(@LECTUREID,@COURESID) = 1
    BEGIN
        DECLARE @ID NVARCHAR(MAX);
        SET @ID = CONCAT('ASM', FORMAT(NEXT VALUE FOR ASSIGNMENT_SEQ, '00000000'));
        INSERT INTO ASSIGNMENT (
						ID
						,LECTUREID
						,COURESID
						,STUDENTID
						,[FILENAME]
						,SUBMIT
						,SCORE)
        VALUES 
					(@ID
					,@LECTUREID
					,@COURESID
					,@STUDENTID
					,@FILENAME
					,0
					,@SCORE);
		SELECT 1 AS RESULT;
    END
    ELSE
    BEGIN
        THROW 50001, 'LECTUREID AND COURESID ALREADY EXISTS TOGETHER', 1;
    END
END;
GO

-- HÀM UPDATE
CREATE OR ALTER PROCEDURE UPDATE_ASSIGNMENT 
    @ID NVARCHAR(MAX),
    @LECTUREID NVARCHAR(MAX),
	@COURESID NVARCHAR(MAX),
    @STUDENTID NVARCHAR(MAX),
    @FILENAME NVARCHAR(MAX),
	@SUBMIT BIT,
	@SCORE NVARCHAR(MAX)
AS
BEGIN
    IF DBO.CHECK_UPDATE_ASSIGNMENT(@ID) = 1
    BEGIN
        UPDATE ASSIGNMENT
        SET LECTUREID = @LECTUREID,
			COURESID = @COURESID,
            STUDENTID = @STUDENTID,
            [FILENAME] = @FILENAME,
			SUBMIT = @SUBMIT,
			SCORE = @SCORE
        WHERE ID = @ID;
    END
    ELSE
    BEGIN
        THROW 50002, 'ERR', 1;
    END;
END;
GO

-- HÀM DELETE
CREATE OR ALTER PROCEDURE DELETE_ASSIGNMENT 
    @ID NVARCHAR(MAX)
AS
BEGIN
    IF DBO.CHECK_DELETE_ASSIGNMENT() = 1
    BEGIN
        DELETE FROM ASSIGNMENT WHERE ID = @ID;
    END
    ELSE
    BEGIN
        THROW 50003, 'ERR', 1;
    END
END;
GO



-- Thêm hàng 1
EXEC INSERT_ASSIGNMENT
    @LECTUREID = N'LEC00000006',
	@COURESID = N'math20240413073400',
    @STUDENTID =N'STD00000322',
    @FILENAME = N'test.docx',
	@SCORE = N'0'

SELECT * FROM GETTABLE_ASSIGNMENT_VI(N'')