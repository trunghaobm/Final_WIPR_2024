USE Final
GO

-- TẠO BẢNG
DROP TABLE IF EXISTS STUDENT_COURSE;
GO

CREATE TABLE STUDENT_COURSE (
    ID NVARCHAR(MAX),
    STUDENTID NVARCHAR(MAX),
    COURSEID NVARCHAR(MAX),
    [SCORE] NVARCHAR(MAX)
);
GO

-- TẠO SEQUENCE
DROP SEQUENCE IF EXISTS STUDENT_COURSE_SEQ;
GO
CREATE SEQUENCE STUDENT_COURSE_SEQ
    START WITH 1
    INCREMENT BY 1
    MINVALUE 1
    NO MAXVALUE
    CACHE 10;
GO

-- HÀM TẠO BẢNG TỪ CHUỖI
CREATE OR ALTER FUNCTION GETTABLE_STUDENT_COURSE (@ID NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT * 
    FROM STUDENT_COURSE SC 
    WHERE SC.ID = @ID
);
GO

CREATE OR ALTER FUNCTION GETTABLE_JOIN_STUDENT_COURSE (@ID NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT	SC.ID AS ID
			,SC.STUDENTID 
			,S.FIRSTNAME
			,S.LASTNAME
			,SC.COURSEID
			,C.[LABEL] 
			,SC.SCORE 
    FROM STUDENT_COURSE SC
		LEFT JOIN COURSE C
		ON C.ID = SC.COURSEID
		LEFT JOIN STUDENT S
		ON S.ID = SC.STUDENTID
    WHERE SC.ID = @ID
);
GO

-- HÀM TẠO BẢNG TỪ CHUỖI
CREATE OR ALTER FUNCTION GETTABLE_STUDENT_COURSE_VI (@CONDITION NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT	SC.ID AS ID
			,SC.STUDENTID AS [MÃ SINH VIÊN]
			,SC.COURSEID AS [MÃ KHÓA HỌC]
			,SC.SCORE AS [ĐIỂM]
    FROM STUDENT_COURSE SC 
    WHERE SC.COURSEID LIKE '%' + @CONDITION + '%' 
		or SC.STUDENTID LIKE '%' + @CONDITION + '%' 
		OR @CONDITION = N''
);
GO

--HAM GET CAC BAN JOIN VAO
CREATE OR ALTER FUNCTION GETTABLE_JOIN_STUDENT_COURSE_VI (@CONDITION NVARCHAR(MAX))
RETURNS TABLE
AS
RETURN
(
    SELECT	SC.ID AS ID
			,S.MSSV AS [MÃ SINH VIÊN]
			,S.FIRSTNAME AS [HỌ VÀ TÊN ĐỆM]
			,S.LASTNAME AS [TÊN]
			,SC.COURSEID AS [MÃ KHÓA HỌC]
			,C.[LABEL] AS [TÊN KHÓA HỌC]
			,SC.SCORE AS [ĐIỂM]
    FROM STUDENT_COURSE SC
		LEFT JOIN COURSE C
		ON C.ID = SC.COURSEID
		LEFT JOIN STUDENT S
		ON S.ID = SC.STUDENTID
    WHERE SC.COURSEID LIKE '%' + @CONDITION + '%' 
		or SC.STUDENTID LIKE '%' + @CONDITION + '%' 
		or S.MSSV LIKE '%' + @CONDITION + '%' 
		OR @CONDITION = N''
);
GO

-- HÀM KIỂM TRA INSERT
CREATE OR ALTER PROCEDURE CHECK_INSERT_STUDENT_COURSE
    @COURSEID NVARCHAR(MAX),
    @STUDENTID NVARCHAR(MAX),
    @ERRMSG NVARCHAR(MAX) OUTPUT
AS
BEGIN
    DECLARE @RESULT BIT = 1;

    IF NOT EXISTS (SELECT 1 FROM STUDENT S WHERE S.ID = @STUDENTID)
    BEGIN
        SET @RESULT = 0;
        SET @ERRMSG = N'STUDENTID DOES NOT EXIST IN STUDENT';
    END;

    IF NOT EXISTS (SELECT 1 FROM COURSE C WHERE C.ID = @COURSEID)
    BEGIN
        SET @RESULT = 0;
        SET @ERRMSG = N'COURSEID DOES NOT EXIST IN STUDENT';
    END;

    IF EXISTS (SELECT 1 FROM STUDENT_COURSE SC WHERE SC.COURSEID = @COURSEID AND SC.STUDENTID = @STUDENTID)
    BEGIN
        SET @RESULT = 0;
        SET @ERRMSG = N'COURSEID AND STUDENTID ALREADY EXISTS';
    END;

    RETURN @RESULT;
END;
GO

-- HÀM KIỂM TRA UPDATE
CREATE OR ALTER FUNCTION CHECK_UPDATE_STUDENT_COURSE(@ID NVARCHAR(10))
RETURNS BIT
AS
BEGIN
    DECLARE @RESULT BIT = 0;
    SET @RESULT = 1;
    RETURN @RESULT;
END;
GO

-- HÀM KIỂM TRA DELETE
CREATE OR ALTER FUNCTION CHECK_DELETE_STUDENT_COURSE()
RETURNS BIT
AS
BEGIN
    RETURN 1;
END;
GO

-- HÀM INSERT
CREATE OR ALTER PROCEDURE INSERT_STUDENT_COURSE 
    @STUDENTID NVARCHAR(MAX),
    @COURSEID NVARCHAR(MAX),
    @SCORE NVARCHAR(MAX)
AS
BEGIN
	DECLARE @ERRMSG NVARCHAR(MAX) = N'';
	EXEC CHECK_INSERT_STUDENT_COURSE @COURSEID, @STUDENTID, @ERRMSG OUTPUT
    IF @ERRMSG =N''
    BEGIN
        DECLARE @ID NVARCHAR(MAX);
        SET @ID = CONCAT('SC', FORMAT(NEXT VALUE FOR STUDENT_COURSE_SEQ, '00000000'));
        INSERT INTO STUDENT_COURSE (
						ID
						,STUDENTID
						,COURSEID
						,[SCORE])
					VALUES 
						(@ID
						,@STUDENTID
						,@COURSEID
						,@SCORE);
		SELECT 1 AS RESULT;
    END;
    ELSE
    BEGIN
        THROW 50001, @ERRMSG, 1;
    END;
END;
GO

-- HÀM UPDATE
CREATE OR ALTER PROCEDURE UPDATE_STUDENT_COURSE 
    @ID NVARCHAR(MAX),
    @STUDENTID NVARCHAR(MAX),
    @COURSEID NVARCHAR(MAX),
    @SCORE NVARCHAR(MAX)
AS
BEGIN
    IF DBO.CHECK_UPDATE_STUDENT_COURSE(@ID) = 1
    BEGIN
        UPDATE STUDENT_COURSE
        SET STUDENTID = @STUDENTID
			,COURSEID = @COURSEID
			,[SCORE] = @SCORE
        WHERE ID = @ID;
    END
    ELSE
    BEGIN
        THROW 50002, 'ERR', 1;
    END;
END;
GO

-- HÀM DELETE
CREATE OR ALTER PROCEDURE DELETE_STUDENT_COURSE 
    @ID NVARCHAR(MAX)
AS
BEGIN
    IF DBO.CHECK_DELETE_STUDENT_COURSE() = 1
    BEGIN
        DELETE FROM STUDENT_COURSE WHERE ID = @ID;
    END
    ELSE
    BEGIN
        THROW 50003, 'ERR', 1;
    END
END;
GO



-- Thêm hàng 1
EXEC INSERT_STUDENT_COURSE @COURSEID = N'math20240328080247', @STUDENTID = N'STD00000006', @SCORE = N'0'
SELECT * FROM GETTABLE_JOIN_STUDENT_COURSE_VI(N'')

UPDATE STUDENT_COURSE SET SCORE = N'1' WHERE ID = N'SC00000022'